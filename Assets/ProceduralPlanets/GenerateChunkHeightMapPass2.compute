#pragma kernel main

#include "Planet.Compute.cginc"
#include "ChunkBiomes.cginc"


Texture2D<float> _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

Texture2D<float2> _chunkSlopeAndCurvatureMap;
SamplerState sampler_chunkSlopeAndCurvatureMap;

float3 _rangeUnitCubePosA;
float3 _rangeUnitCubePosB;
float3 _rangeUnitCubePosC;
float3 _rangeUnitCubePosD;

float _heightMin;
float _heightMax;




RWTexture2D<float> _chunkHeightMapNew;




[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float2 uv = getUv(_chunkHeightMapNew, id.xy);

	float3 unitCubePos = lerp(
		lerp(_rangeUnitCubePosA, _rangeUnitCubePosB, uv.x),
		lerp(_rangeUnitCubePosD, _rangeUnitCubePosC, uv.x),
		uv.y
	);

	float3 dir = unitCubeToUnitSphere(unitCubePos);

	float chunkMapHeight = _chunkHeightMap[id.xy];
	float realPlanetHeight = chunkMapHeight * (_heightMax - _heightMin) + _heightMin;

	float2 slopeXY = _chunkSlopeAndCurvatureMap[id.xy].xy;

	
	BiomeData data;
	data.dir = dir;
	data.slopeXY = slopeXY;
	data.humidity = 0.5;
	data.altidute = realPlanetHeight;

	BiomeResult biome = selectBiome(data);

	chunkMapHeight += adjustHeight(biome, data) / (_heightMax - _heightMin);
	
	//DEBUG
	//if(slope > 0.01) height += slope;
	//height += (abs(snoise(dir * 100, 20, 1.4))) * 0.05;
	//height = distToEdge * 0.5;
	//height += 0.001;
	//height += slope * 0.001;
	//height = uv.x;
	//height = slope;

	//SAFETY
	chunkMapHeight = clamp(chunkMapHeight, 0, 1);

	_chunkHeightMapNew[id.xy] = chunkMapHeight;
}